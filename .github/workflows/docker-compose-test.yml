name: Docker Compose Test CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '2.2.1'

jobs:
  docker-compose-tests:
    name: Run Tests with Docker Compose
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Install Docker Compose
        run: |
          # Ensure docker compose plugin is available
          docker compose version || {
            echo "Installing Docker Compose..."
            sudo apt-get update
            sudo apt-get install -y docker-compose-plugin
          }
          
      - name: Build mock server image
        run: |
          docker compose -f docker-compose.test.yml build mock-server
      
      - name: Start mock server
        run: |
          docker compose -f docker-compose.test.yml up -d mock-server
          
          # Wait for mock server to be healthy
          echo "Waiting for mock server to be ready..."
          for i in {1..60}; do
            if docker compose -f docker-compose.test.yml ps mock-server | grep -q "healthy"; then
              echo "Mock server is healthy!"
              break
            fi
            if [ $i -eq 60 ]; then
              echo "Mock server failed to become healthy after 60 seconds"
              docker compose -f docker-compose.test.yml logs mock-server
              exit 1
            fi
            echo "Waiting for mock server... (attempt $i/60)"
            sleep 1
          done
          
          # Additional verification
          curl -f http://localhost:5000/health || {
            echo "Health check endpoint failed"
            docker compose -f docker-compose.test.yml logs mock-server
            exit 1
          }
      
      - name: Run integration tests
        run: |
          docker compose -f docker-compose.test.yml run --rm test-integration
      
      - name: Run contract tests  
        run: |
          # Contract tests can use the same mock server
          docker compose -f docker-compose.test.yml run --rm \
            -e USE_MOCK_SERVER=true \
            -e MOCK_SERVER_URL=http://mock-server:5000 \
            test-full \
            python -m pytest tests/contracts/ -v
      
      - name: Stop services
        if: always()
        run: |
          docker compose -f docker-compose.test.yml down -v
      
      - name: Show logs on failure
        if: failure()
        run: |
          docker compose -f docker-compose.test.yml logs
