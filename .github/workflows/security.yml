name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan every Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction
          poetry add --group dev safety pip-audit

      - name: Run Bandit
        run: |
          poetry run bandit -r libs -f json -o bandit-report.json

      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

      - name: Run Safety check
        run: |
          poetry run safety check --json > safety-report.json || true

      - name: Run pip-audit
        run: |
          poetry run pip-audit --format json --output pip-audit-report.json || true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Create security summary
        if: always()
        run: |
          echo "# ðŸ”’ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f bandit-report.json ]; then
            echo "## Bandit (Python Security)" >> $GITHUB_STEP_SUMMARY
            BANDIT_ISSUES=$(jq '.results | length' bandit-report.json)
            echo "Found $BANDIT_ISSUES potential security issues" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f safety-report.json ]; then
            echo "## Safety (Dependency Check)" >> $GITHUB_STEP_SUMMARY
            echo "Dependency vulnerabilities checked" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- Review the security findings in the Security tab" >> $GITHUB_STEP_SUMMARY
          echo "- Update dependencies with known vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "- Apply security patches as recommended" >> $GITHUB_STEP_SUMMARY
