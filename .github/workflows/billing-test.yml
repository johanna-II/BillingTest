name: Billing Test

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'alpha'
        type: choice
        options:
          - alpha
          - beta
          - production
      member:
        description: 'Member to test'
        required: true
        default: 'kr'
        type: choice
        options:
          - kr
          - jp
          - etc
          - all
      month:
        description: 'Month to test (YYYY-MM)'
        required: false
        default: ''
      use_mock:
        description: 'Use mock server'
        required: false
        default: true
        type: boolean

env:
  PYTHON_VERSION: '3.12'

jobs:
  billing-test:
    name: Billing Test - ${{ inputs.member }} (${{ inputs.environment }})
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set test month
        id: set-month
        run: |
          if [ -z "${{ inputs.month }}" ]; then
            echo "MONTH=$(date +%Y-%m)" >> $GITHUB_OUTPUT
          else
            echo "MONTH=${{ inputs.month }}" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: billing-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run billing tests
        run: |
          # Set mock flag
          MOCK_FLAG=""
          if [ "${{ inputs.use_mock }}" = "true" ]; then
            MOCK_FLAG="--use-mock"
          fi
          
          # Run for all members or specific member
          if [ "${{ inputs.member }}" = "all" ]; then
            for member in kr jp etc; do
              echo "Running tests for $member..."
              docker-compose run --rm billing-test \
                pytest tests \
                  --env ${{ inputs.environment }} \
                  --member $member \
                  --month ${{ steps.set-month.outputs.MONTH }} \
                  $MOCK_FLAG \
                  -v \
                  --junit-xml=test-results-$member.xml
            done
          else
            docker-compose run --rm billing-test \
              pytest tests \
                --env ${{ inputs.environment }} \
                --member ${{ inputs.member }} \
                --month ${{ steps.set-month.outputs.MONTH }} \
                $MOCK_FLAG \
                -v \
                --junit-xml=test-results.xml
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: billing-test-results
          path: test-results*.xml

      - name: Test Summary
        if: always()
        run: |
          echo "# Billing Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Member**: ${{ inputs.member }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Month**: ${{ steps.set-month.outputs.MONTH }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Mock Server**: ${{ inputs.use_mock }}" >> $GITHUB_STEP_SUMMARY