name: Scheduled Full Test Suite

on:
  schedule:
    # Run at 2 AM UTC every day (11 AM KST)
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Test scope to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - performance
          - contract

env:
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '2.2.1'

jobs:
  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        member: [kr, jp, etc]
        month: ['current', 'previous']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set test month
        id: set-month
        run: |
          if [ "${{ matrix.month }}" = "current" ]; then
            echo "MONTH=$(date +%Y-%m)" >> $GITHUB_OUTPUT
          else
            echo "MONTH=$(date -d "1 month ago" +%Y-%m)" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run full test suite
        run: |
          poetry run pytest \
            --env alpha \
            --member ${{ matrix.member }} \
            --month ${{ steps.set-month.outputs.MONTH }} \
            --cov=libs \
            --cov-report=term-missing \
            --cov-report=xml \
            --junit-xml=test-results-${{ matrix.member }}-${{ matrix.month }}.xml \
            -v

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.member }}-${{ matrix.month }}
          path: test-results-*.xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: scheduled-${{ matrix.member }}

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run performance tests
        run: |
          poetry run pytest tests/performance -v \
            --benchmark-only \
            --benchmark-json=performance-results.json

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: performance-results.json

  contract-tests:
    name: Contract Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run contract tests
        run: |
          poetry run pytest tests/contracts -v \
            -m "contract"

  notification:
    name: Send Test Report
    runs-on: ubuntu-latest
    needs: [full-test-suite, performance-tests, contract-tests]
    if: always()
    
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4

      - name: Generate summary
        run: |
          echo "# Daily Test Report - $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Full Test Suite: ${{ needs.full-test-suite.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Contract Tests: ${{ needs.contract-tests.result }}" >> $GITHUB_STEP_SUMMARY