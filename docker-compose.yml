services:
  mock-server:
    build:
      context: .
      dockerfile: Dockerfile.mock
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=mock_server.app
      - FLASK_ENV=development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - billing-network

  billing-test:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - USE_MOCK_SERVER=true
      - MOCK_SERVER_HOST=mock-server
      - MOCK_SERVER_PORT=5000
      - PYTHONUNBUFFERED=1
    depends_on:
      mock-server:
        condition: service_healthy
    networks:
      - billing-network
    volumes:
      - ./test-results:/workspace/test-results
      - ./coverage-reports:/workspace/coverage-reports
    command: >
      sh -c "
        echo 'Waiting for mock server to be ready...' &&
        sleep 5 &&
        pytest --use-mock --cov=libs --cov-report=xml:/workspace/coverage-reports/coverage.xml -v
      "

networks:
  billing-network:
    driver: bridge
